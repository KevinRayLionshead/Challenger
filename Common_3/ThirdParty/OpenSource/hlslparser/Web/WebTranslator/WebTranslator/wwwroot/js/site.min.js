$(function(){function g(){n.setSize("100%",200);n.setValue(d)}function r(){return b.find(n=>n===v.selectedOptions[0].value)}function tt(){return{shader:r()}}function f(n){var t=tt();$.ajax({url:window.CompileUrl,type:"POST",data:JSON.stringify(t),contentType:"application/json; charset=utf-8",dataType:"json",error:function(){alert("Unexpected error")},success:function(){var t=n;v.selectedIndex=t}})}function l(n){const t=new FileReader;return new Promise((i,r)=>{t.onerror=()=>{t.abort(),r(new DOMException("Problem parsing input file."))},t.onload=()=>{i(t.result)},t.readAsText(n.files[0])})}function u(n){var r=n.split(")"),t,i;r[0]==="error"&&(t={FileContents:e.getValue()},i="/Home/SaveFeedbackFromClient",$.post(i,t,function(){}))}function it(n,t){var i=document.createElement("a");i.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(t));i.setAttribute("download",n);i.style.display="none";document.body.appendChild(i);i.click();document.body.removeChild(i)}function a(){$(".progress-bar").css("width","100%")}function t(){$(".progress-bar").css("width","0%")}function rt(r,f,e,o,s){if(r===undefined){var h={FileName:"NoFile",FileContents:f,EntryName:e,Shader:o,Language:s,Result:""};a();$.ajax({url:window.ParseUrl,type:"POST",data:JSON.stringify(h),contentType:"application/json; charset=utf-8",dataType:"json",error:function(){t();alert("Unexpected error")},success:function(r){t();i.setValue(n.getValue()+r.result);u(r.result)}})}else h={FileName:r,FileContents:f,EntryName:e,Shader:o,Language:s,Result:""},a(),$.ajax({url:window.ParseUrl,type:"POST",data:JSON.stringify(h),contentType:"application/json; charset=utf-8",dataType:"json",error:function(){t();alert("Unexpected error")},success:function(r){t();i.setValue(n.getValue()+r.result);u(r.result)}})}function o(n){var o=document.getElementById("File1"),t=o.files[0],i=r();i==="Vertex"?t=t+".vert":i==="Fragment"?t=t+".frag":i==="Hull"?t=t+".tesc":i==="Domain"?t=t+".tese":i==="Geometry"?t=t+".geom":i==="Compute"&&(t=t+".comp");var s=n,u=e.getValue(),h=document.getElementById("Entry"),f=h.value;if(f===""&&(f="main"),u===undefined||u===""){window.alert("There is no input!");return}rt(t,u,f,i,s)}var v=document.getElementById("selectShader"),y=document.getElementById("IncludeHeader"),b=window.AllShaders,p,s,h,k,n;for(p of b)v.options.add(new Option(p,p));k=0;const w="darcula",d="/* Write your header comments here */\n";n=CodeMirror.fromTextArea(document.getElementById("TextArea"),{mode:"x-shader/hlsl",theme:w,lineNumbers:!0,matchBrackets:!0,styleActiveLine:!0,indentUnit:4});g();var e=CodeMirror.fromTextArea(document.getElementById("TextArea1"),{mode:"x-shader/hlsl",theme:w,lineNumbers:!0,matchBrackets:!0,styleActiveLine:!0,indentUnit:4}),i=CodeMirror.fromTextArea(document.getElementById("TextArea2"),{mode:"x-shader/hlsl",theme:w,lineNumbers:!0,matchBrackets:!0,styleActiveLine:!0,indentUnit:4}),c=document.getElementById("File1"),nt=document.getElementById("File1Label"),ut=document.getElementById("IncludeFile1");e.setValue("/* Example Source HLSL Fragment Shader */\n\nstruct VSOutput {\n\tfloat4 Position : SV_POSITION;\n    float4 Color : COLOR;\n};\n\nfloat4 main(VSOutput input) : SV_TARGET\n{\n    float4 Value;\n#if HLSL\n    Value = float4(1.0, 0.0, 0.0, 1.0);\n#elif GLSL\n    Value = float4(0.0, 1.0, 0.0, 1.0);\n#elif MSL\n    Value = float4(0.0, 0.0, 1.0, 1.0);\n#endif\n    return Value;\n}");f(1);IncludeFile1.onchange=()=>{var n=l(IncludeFile1);n.then(function(n){for(var f,e,i=IncludeFile1.files[0],u=!1,r=0;r<y.options.length;r++)if(y.options[r].value===i.name){u=!0;break}u||y.options.add(new Option(i.name,i.name));f="/Home/CreateIncludeFile";e={FileName:i.name,FileContents:n};$.post(f,e,function(){t();IncludeFile1.value=""})})};c.onchange=()=>{var n=l(c);n.then(function(n){var t=c.files[0],i;if(s=t.name,t!==undefined){nt.textContent=t.name;i=t.name.split(".").pop();switch(i){case"vert":case"src_vert":f(0);break;case"frag":case"src_frag":f(1);break;case"tesc":case"src_tesc":f(2);break;case"tese":case"src_tese":f(3);break;case"geom":case"src_geom":f(4);break;case"comp":case"src_comp":f(5);break;default:window.alert('Unknowned extension"'+i+'" is founded! Please, select the right shader type before translate it.')}}else window.alert("Error!");e.setValue(n);c.value=""})};$("#DownloadShader").click(function(){if(i.getValue()===""){window.alert("There is no output!");return}var t,n;s===undefined||s===""?n="output":(t=s.lastIndexOf("."),n=s.substr(0,t));r()==="Vertex"?n=n+".vert":r()==="Fragment"?n=n+".frag":r()==="Hull"?n=n+".tesc":r()==="Domain"?n=n+".tese":r()==="Geometry"?n=n+".geom":r()==="Compute"&&(n=n+".comp");h==="MSL"&&(n+=".metal");it(n,i.getValue())});$("#Translation").click(function(){if(o("HLSL"),o("GLSL"),r()==="Hull"){var f=$(document.createElement("input"));f.attr("type","file");window.alert("Please, open a vertex shader for generating Metal's hull shader!");f.trigger("click");f.change(function(){var r=l(this);r.then(function(r){var y=document.getElementById("File1"),c=y.files[0],l="Hull",v="MSL",f=e.getValue(),p=document.getElementById("Entry"),o=p.value,h,s;if(o===""&&(o="main"),f===undefined||f===""){window.alert("There is no input!");return}f=r+f;a();h="/Home/LocalParse";c===undefined?(s={FileName:"NoFile",FileContents:f,EntryName:o,Shader:l,Language:v,Result:""},$.post(h,s,function(r){t();i.setValue(n.getValue()+r.result);u(r.result)})):(s={FileName:c.name,FileContents:f,EntryName:o,Shader:l,Language:v,Result:""},$.post(h,s,function(r){t();i.setValue(n.getValue()+r.result);u(r.result)}))})})}else o("MSL")});$("#ShowHLSL").click(function(){$.post("/Home/GetStoredResult",{Language:"HLSL",Result:""},function(r){t();i.setValue(n.getValue()+r.result);u(r.result)})});$("#ShowGLSL").click(function(){$.post("/Home/GetStoredResult",{Language:"GLSL",Result:""},function(r){t();i.setValue(n.getValue()+r.result);u(r.result)})});$("#ShowMSL").click(function(){$.post("/Home/GetStoredResult",{Language:"MSL",Result:""},function(r){t();i.setValue(n.getValue()+r.result);u(r.result)})});$("#ToHLSL").click(function(){o("HLSL");h="HLSL"});$("#ToGLSL").click(function(){o("GLSL");h="GLSL"});$("#ToMSL").click(function(){if(r()==="Hull"){var f=$(document.createElement("input"));f.attr("type","file");window.alert("Please, open a vertex shader for generating Metal's hull shader!");f.trigger("click");f.change(function(){var r=l(this);r.then(function(r){var y=document.getElementById("File1"),c=y.files[0],l="Hull",v="MSL",f=e.getValue(),p=document.getElementById("Entry"),o=p.value,h,s;if(o===""&&(o="main"),f===undefined||f===""){window.alert("There is no input!");return}f=r+f;a();h="/Home/LocalParse";c===undefined?(s={FileName:"NoFile",FileContents:f,EntryName:o,Shader:l,Language:v,Result:""},$.post(h,s,function(r){t();i.setValue(n.getValue()+r.result);u(r.result)})):(s={FileName:c.name,FileContents:f,EntryName:o,Shader:l,Language:v,Result:""},$.post(h,s,function(r){t();i.setValue(n.getValue()+r.result);u(r.result)}))})})}else o("MSL");h="MSL"})});