/*
 * Copyright (c) 2018 Kostas Anagnostou (https://twitter.com/KostasAAA).
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/


cbuffer cbPerPass : register(b0)
{
	float4x4	projView;
	float4x4	invProjView;
	float4		rtSize;
	float4		lightDir;
	float4		cameraPos;
}

Texture2D<float4>	normalbuffer : register(t1);
Texture2D<float>	shadowbuffer : register(t2);
RWTexture2D<float4> outputRT : register(u3);

[numthreads(16, 16, 1)]
void main(uint3 Gid : SV_GroupID, uint3 DTid : SV_DispatchThreadID, uint3 GTid : SV_GroupThreadID, uint GI : SV_GroupIndex)
{
	const float lightIntensity = 5;
	const float3 lightColour = float3(1, 1, 0.5);

	float3 normal = normalbuffer[DTid.xy].xyz;

	float NdotL = saturate(dot(normal, lightDir.xyz));

	float shadowFactor = shadowbuffer[DTid.xy].x; 

	//add some fake "up-down" ambient to add some contrast to shadowed areas
	float ambient = lerp(0.5, 0.2, normal.y * 0.5 + 0.5);

	float3 diffuse = (lightIntensity * shadowFactor * NdotL) *  lightColour + ambient;

	outputRT[DTid.xy] = float4(diffuse, 1);
}